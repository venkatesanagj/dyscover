package tts;

//import java.util.Locale.;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.util.Locale;
import javax.speech.synthesis.Synthesizer;
import javax.swing.JFileChooser;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.text.Document;
import javax.swing.undo.CannotRedoException;
import javax.swing.undo.CannotUndoException;
import javax.swing.undo.UndoManager;
import tts.welcomePage;





/**
 *
 * @author  karekar
 */
public class welcomePage extends javax.swing.JFrame {

    

    
    private String Word;
    private Object[] arr;
    private Object cmd;
    private Object selectionfc;
    private UndoManager undo;
  //  JTabbedPane p1;
    private Object clipboard;
    private Object clipBoard;
    
    /** Creates new form welcomePage */
    public welcomePage() {
        initComponents();
       
        undo = new UndoManager();
  Document doc = TextArea.getDocument();
  doc.addUndoableEditListener(new UndoableEditListener() {
  public void undoableEditHappened(UndoableEditEvent evt) {
  undo.addEdit(evt.getEdit());
 
  }
    });
    }

   
   
   /* initialize the form.
     * WARNING: Do NOT Modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    /*@SuppressWarnings("unchecked")*/
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        PlayB = new javax.swing.JButton();
        PauseB = new javax.swing.JButton();
        ClearB = new javax.swing.JButton();
        SynB = new javax.swing.JButton();
        SynBox = new javax.swing.JComboBox();
        ImageDis = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        FileOpen = new javax.swing.JMenuItem();
        FileExit = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        EditUndo = new javax.swing.JMenuItem();
        EditRedo = new javax.swing.JMenuItem();
        EditCut = new javax.swing.JMenuItem();
        EditCopy = new javax.swing.JMenuItem();
        EditPaste = new javax.swing.JMenuItem();
        EditSelectAll = new javax.swing.JMenuItem();
        View = new javax.swing.JMenu();
        ViewToolbars = new javax.swing.JMenuItem();
        Option = new javax.swing.JMenu();
        OptionPE = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 153, 0));

        TextArea.setBackground(new java.awt.Color(204, 204, 255));
        TextArea.setColumns(20);
        TextArea.setRows(5);
        TextArea.setToolTipText("Enter your text here.");
        jScrollPane1.setViewportView(TextArea);

        PlayB.setText("PLAY");
        PlayB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayBActionPerformed(evt);
            }
        });

        PauseB.setText("PAUSE");
        PauseB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PauseBActionPerformed(evt);
            }
        });

        ClearB.setText("CLEAR");
        ClearB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBActionPerformed(evt);
            }
        });

        SynB.setText("SYNONYMOUS");
        SynB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SynBActionPerformed(evt);
            }
        });

        ImageDis.setBackground(new java.awt.Color(51, 51, 255));
        ImageDis.setForeground(new java.awt.Color(0, 153, 153));
        ImageDis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        File.setText("File");
        File.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FileMouseClicked(evt);
            }
        });
        File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileActionPerformed(evt);
            }
        });

        FileOpen.setText("OPEN ");
        FileOpen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FileOpenMouseClicked(evt);
            }
        });
        FileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileOpenActionPerformed(evt);
            }
        });
        File.add(FileOpen);

        FileExit.setText("Exit");
        FileExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FileExitMouseClicked(evt);
            }
        });
        FileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileExitActionPerformed(evt);
            }
        });
        File.add(FileExit);

        jMenuBar1.add(File);

        Edit.setText("Edit");

        EditUndo.setText("Undo");
        EditUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditUndoActionPerformed(evt);
            }
        });
        Edit.add(EditUndo);

        EditRedo.setText("Redo");
        EditRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditRedoActionPerformed(evt);
            }
        });
        Edit.add(EditRedo);

        EditCut.setText("Cut");
        EditCut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCutActionPerformed(evt);
            }
        });
        Edit.add(EditCut);

        EditCopy.setText("Copy");
        EditCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCopyActionPerformed(evt);
            }
        });
        Edit.add(EditCopy);

        EditPaste.setText("Paste");
        EditPaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditPasteActionPerformed(evt);
            }
        });
        Edit.add(EditPaste);

        EditSelectAll.setText("Select All");
        EditSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditSelectAllActionPerformed(evt);
            }
        });
        Edit.add(EditSelectAll);

        jMenuBar1.add(Edit);

        View.setText("View");

        ViewToolbars.setText("Toolbars");
        View.add(ViewToolbars);

        jMenuBar1.add(View);

        Option.setText("Option");

        OptionPE.setText("Pronunciation Editor");
        OptionPE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OptionPEMouseClicked(evt);
            }
        });
        OptionPE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OptionPEActionPerformed(evt);
            }
        });
        Option.add(OptionPE);

        jMenuBar1.add(Option);

        Help.setText("Help");
        jMenuBar1.add(Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ClearB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PauseB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PlayB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SynB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SynBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ImageDis, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(PlayB)
                                .addGap(37, 37, 37)
                                .addComponent(PauseB)
                                .addGap(42, 42, 42)
                                .addComponent(ClearB))
                            .addComponent(ImageDis, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SynB)
                            .addComponent(SynBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("static-access")
private void PlayBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayBActionPerformed
               Synthesizer synth;
 try
        {  
String str=new String(TextArea.getText());
            synth = (Synthesizer) Central.createSynthesizer(new SynthesizerModeDesc(null,"general",Locale.ENGLISH,null,null));
            synth.allocate();
            synth.resume();
            synth.speakPlainText(str, null);
            synth.waitEngineState(Synthesizer.QUEUE_EMPTY);
            synth.deallocate();
        }
        catch (Exception e) { e.printStackTrace(); }//str.FreeTTSSpeakable();


		
	}


      

    private void play() {
        throw new UnsupportedOperationException("Not yet implemented");
           
// TODO add your handling code here:
}//GEN-LAST:event_PlayBActionPerformed
private void SynBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SynBActionPerformed

        
            
// TODO add your handling code here:
       
// TODO add your handling code here:
}//GEN-LAST:event_SynBActionPerformed

private void ClearBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBActionPerformed
TextArea.setText("");
SynBox.removeAllItems();


// TODO add your handling code here:
}//GEN-LAST:event_ClearBActionPerformed

private void PauseBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PauseBActionPerformed
synth.deallocate();// TODO add your handling code here:
}//GEN-LAST:event_PauseBActionPerformed

private void FileOpenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileOpenMouseClicked
    // TODO add your handling code here:
}//GEN-LAST:event_FileOpenMouseClicked

private void FileExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileExitMouseClicked
//TODO add your handling code here:;
}//GEN-LAST:event_FileExitMouseClicked

private void FileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FileMouseClicked
    // TODO add your handling code here:
}//GEN-LAST:event_FileMouseClicked

private void OptionPEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OptionPEMouseClicked
 // TODO add your handling code here:;
}//GEN-LAST:event_OptionPEMouseClicked

private void FileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileExitActionPerformed
System.exit(0);// TODO add your handling code here:
}//GEN-LAST:event_FileExitActionPerformed

private void FileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileOpenActionPerformed
JFileChooser fd = new JFileChooser();
String data="";
String data1="";
            int result = fd.showDialog(null, "Select any document");
        File selectedFile;
            if (result == JFileChooser.APPROVE_OPTION)
            {
                selectedFile = fd.getSelectedFile(); // where this is a class field
                String fileName = selectedFile.getName();
                String filePath=selectedFile.getPath();
              try
			{
                                // Open the file that is the first 
                                // command line parameter
                                FileInputStream fstream = new 
					FileInputStream(filePath);

                                // Convert our input stream to a
                                // DataInputStream
				DataInputStream in = 
                                        new DataInputStream(fstream);

                                // Continue to read lines while 
                                // there are still some left to read
                               while (in.available() !=0)
				{
                                        // Print file line to screen
                              data=(in.readLine());
                                data1=data1+data;
					TextArea.setText(data1);
				} 

				in.close();
			} 
                        catch (Exception e)
			{
				System.err.println("File input error");
			}
		
              
	}



            
            

// TODO add your handling code here:
}//GEN-LAST:event_FileOpenActionPerformed

private void FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileActionPerformed
 //Create a file chooserfinal 
    JFileChooser fc = new JFileChooser();
    //Set the file chooser to allow only directory 
    fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); // TODO add your handling code here:
}//GEN-LAST:event_FileActionPerformed

private void EditUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditUndoActionPerformed
try {
  if (undo.canUndo()) {
  undo.undo();
  }
  } 
  catch (CannotUndoException e) {
  }// TODO add your handling code here:
}//GEN-LAST:event_EditUndoActionPerformed

private void EditRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditRedoActionPerformed
try {
  if (undo.canRedo()) {
  undo.redo();
  }
  } 
  catch (CannotRedoException e) {
  }  // TODO add your handling code here:
}//GEN-LAST:event_EditRedoActionPerformed

private void EditCutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCutActionPerformed
TextArea.cut();
    // TODO add your handling code here:
}//GEN-LAST:event_EditCutActionPerformed

private void EditSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditSelectAllActionPerformed
TextArea.selectAll();// TODO add your handling code here:
}//GEN-LAST:event_EditSelectAllActionPerformed

private void EditCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCopyActionPerformed
TextArea.copy();
// TODO add your handling code here:
}//GEN-LAST:event_EditCopyActionPerformed

private void EditPasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditPasteActionPerformed
TextArea.paste();
// TODO add your handling code here:
}//GEN-LAST:event_EditPasteActionPerformed

private void OptionPEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OptionPEActionPerformed
setVisible(false);
new PronunciationEditor().setVisible(true);
// TODO add your handling code here:
}//GEN-LAST:event_OptionPEActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new welcomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearB;
    private javax.swing.JMenu Edit;
    private javax.swing.JMenuItem EditCopy;
    private javax.swing.JMenuItem EditCut;
    private javax.swing.JMenuItem EditPaste;
    private javax.swing.JMenuItem EditRedo;
    private javax.swing.JMenuItem EditSelectAll;
    private javax.swing.JMenuItem EditUndo;
    private javax.swing.JMenu File;
    private javax.swing.JMenuItem FileExit;
    private javax.swing.JMenuItem FileOpen;
    private javax.swing.JMenu Help;
    private javax.swing.JLabel ImageDis;
    private javax.swing.JMenu Option;
    private javax.swing.JMenuItem OptionPE;
    private javax.swing.JButton PauseB;
    private javax.swing.JButton PlayB;
    private javax.swing.JButton SynB;
    private javax.swing.JComboBox SynBox;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JMenu View;
    private javax.swing.JMenuItem ViewToolbars;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

   
  /*  private void play1() {
        throw new UnsupportedOperationException("Not yet implemented");
    }*/
   }


